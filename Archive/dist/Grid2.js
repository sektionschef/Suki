class Grid2{constructor(e){if(this.horizonRatio=1/7*4,this.OK=!0,this.finished=!1,this.STARTFRAME=frameCount,this.DEBUG=e.DEBUG,this.marginBoxCount=e.marginBoxCount,this.shortBoxCount=e.shortBoxCount,this.horizonRow=Math.round(this.shortBoxCount*this.horizonRatio),this.paletteBackgrounda=color("#a2c1ca"),this.paletteBackgroundb=color("#5b7466"),this.shapeColor=color("#617580"),(this.OK=!0)&&(this.paletteFullGrounda=tenPaletter("#bfdff0",10,1,6,2),this.paletteFullGroundb=tenPaletter("#95c9a3",10,1,6,2),this.paletteCutOutCloudsa=tenPaletter("#869bb8",10,1,5,1),this.paletteCutOutCloudsb=tenPaletter("#6cbe9c",10,1,2,1),this.paletteCutOutClouds2a=tenPaletter("#49636d",10,5,5,5),this.paletteCutOutClouds2b=tenPaletter("#dbf1e0",10,5,5,5),this.paletteCutOutClouds3a=tenPaletter("#8393a1",10,1,15,1),this.paletteCutOutClouds3b=tenPaletter("#a1b3a9",10,1,15,1),this.paletteSectiona1=tenPaletter("#8595aa",10,1,2,1),this.paletteSectiona2=tenPaletter("#6b9ba1",10,1,2,1),this.paletteSectiona3=tenPaletter("#25323a",10,1,2,1),this.paletteSectionb1=tenPaletter("#7aad88",10,1,2,1),this.paletteSectionb2=tenPaletter("#61926e",10,1,2,1),this.paletteSectionb3=tenPaletter("#55755e",10,1,2,1),this.paletteZigZag=tenPaletter("#4a4c4d",10,0,20,0),this.palettedrawCutOutCloudsVa=tenPaletter("#9fc5d4",10,5,5,1),this.palettedrawCutOutCloudsVb=tenPaletter("#c0d3c5",10,5,5,1)),this.paletteHorizon1=tenPaletter("#636569",10,0,1,1),this.paletteHorizon2=tenPaletter("#575a64",10,0,1,1),this.noise1=new Noise(.01,.1,0),this.noise2=new Noise(.01,.02,0),this.noise3=new Noise(.6,.4,0),this.noise4=new Noise(.7,.8,0),this.noise5=new Noise(.01,.03,0),this.noise6=new Noise(.03,.03,0),this.noise7=new Noise(.02,.2,0),this.noise8=new Noise(.02,.2,0),this.noise9=new Noise(.02,.3,0),this.noise10=new Noise(.1,.9,0),this.noise11=new Noise(.1,.01,0),this.noise12=new Noise(.2,.01,0),this.boxSize=SHORTSIDE/this.shortBoxCount,this.longBoxCount=Math.floor(LONGSIDE/this.boxSize),this.shortMargin=SHORTSIDE%this.boxSize,0!=this.shortMargin)throw new Error("wtf, there is a margin!");this.longMargin=LONGSIDE%this.boxSize/2,width<height?(this.widthBoxCount=this.shortBoxCount,this.heightBoxCount=this.longBoxCount,this.widthMargin=this.shortMargin,this.heightMargin=this.longMargin):(this.widthBoxCount=this.longBoxCount,this.heightBoxCount=this.shortBoxCount,this.widthMargin=this.longMargin,this.heightMargin=this.shortMargin),this.columns=new Set,this.rows=new Set,this.boxes=[],this.stripes=[],this.stripeLines=[],this.buffer=createGraphics(width,height,SVG),this.bufferNoise=createGraphics(width,height,SVG),this.bufferFullGround=createGraphics(width,height,SVG),this.bufferCutOutClouds=createGraphics(width,height,SVG),this.bufferEverywhereSome1=createGraphics(width,height,SVG),this.bufferSection=createGraphics(width,height,SVG),this.bufferCutOutClouds2=createGraphics(width,height,SVG),this.bufferCutOutClouds3=createGraphics(width,height,SVG),this.bufferCutOutCloudsV=createGraphics(width,height,SVG),this.buffer8=createGraphics(width,height,SVG),this.buffer9=createGraphics(width,height,SVG),this.buffer10=createGraphics(width,height,SVG),this.buffer11=createGraphics(width,height,SVG),this.buffer12=createGraphics(width,height,SVG),this.bufferZigZag=createGraphics(width,height,SVG),this.createBoxes(),this.DEBUG&&this.showDebug(),this.draw()}createBoxes(){for(var e=0,s=0;s<this.heightBoxCount;s++){this.noise1.resetSoff(),this.noise2.resetSoff(),this.noise3.resetSoff(),this.noise4.resetSoff(),this.noise5.resetSoff(),this.noise6.resetSoff(),this.noise7.resetSoff(),this.noise8.resetSoff(),this.noise9.resetSoff(),this.noise10.resetSoff(),this.noise11.resetSoff(),this.noise12.resetSoff();for(var t=0;t<this.widthBoxCount;t++){var i=createVector(this.widthMargin+t*this.boxSize+this.boxSize/2,this.heightMargin+s*this.boxSize+this.boxSize/2),o=createVector(this.widthMargin+t*this.boxSize,this.heightMargin+s*this.boxSize),n=p5.Vector.add(o,createVector(this.boxSize,0)),h=p5.Vector.add(o,createVector(this.boxSize,this.boxSize)),a=p5.Vector.add(o,createVector(0,this.boxSize)),u=this.noise1.createNoiseValue(),r=this.noise2.createNoiseValue(),l=this.noise3.createNoiseValue(),f=this.noise4.createNoiseValue(),x=this.noise5.createNoiseValue(),b=this.noise6.createNoiseValue(),g=this.noise7.createNoiseValue(),V=this.noise8.createNoiseValue(),d=this.noise9.createNoiseValue(),p=this.noise10.createNoiseValue(),c=this.noise11.createNoiseValue(),M=this.noise12.createNoiseValue(),m=insidePolygon([i.x,i.y],polyPoints),C=insidePolygon([i.x,i.y],polyPointsLeft),S=s==this.horizonRow,w=s<=this.horizonRow;this.boxes.push({center:i,offset:createVector(getRandomFromInterval(-10,10),getRandomFromInterval(-10,10)),A:o,B:n,C:h,D:a,height:s,width:t,index:e,mask:!1,noiseValue1:u,noiseValue2:r,noiseValue3:l,noiseValue4:f,noiseValue5:x,noiseValue6:b,noiseValue7:g,noiseValue8:V,noiseValue9:d,noiseValue10:p,noiseValue11:c,noiseValue12:M,polygonA:m,polygonLeft:C,horizon:S,aboveHorizon:w}),e+=1,this.noise1.updateSoff(),this.noise2.updateSoff(),this.noise3.updateSoff(),this.noise4.updateSoff(),this.noise5.updateSoff(),this.noise6.updateSoff(),this.noise7.updateSoff(),this.noise8.updateSoff(),this.noise9.updateSoff(),this.noise10.updateSoff(),this.noise11.updateSoff(),this.noise12.updateSoff()}this.noise1.updateLoff(),this.noise1.updateZoff(),this.noise2.updateLoff(),this.noise2.updateZoff(),this.noise3.updateLoff(),this.noise3.updateZoff(),this.noise4.updateLoff(),this.noise4.updateZoff(),this.noise5.updateLoff(),this.noise5.updateZoff(),this.noise6.updateLoff(),this.noise6.updateZoff(),this.noise7.updateLoff(),this.noise7.updateZoff(),this.noise8.updateLoff(),this.noise8.updateZoff(),this.noise9.updateLoff(),this.noise9.updateZoff(),this.noise10.updateLoff(),this.noise10.updateZoff(),this.noise11.updateLoff(),this.noise11.updateZoff(),this.noise12.updateLoff(),this.noise12.updateZoff()}}showDebug(){this.buffer.push(),this.buffer.noFill(),this.buffer.strokeWeight(.1),this.buffer.stroke("black"),this.buffer.rectMode(CORNERS);for(var e=0;e<this.boxes.length;e++)this.buffer.rect(this.boxes[e].A.x,this.boxes[e].A.y,this.boxes[e].C.x,this.boxes[e].C.y);this.buffer.pop()}drawSkipMargin(e){return width<height?e.height<this.marginBoxCount||e.width<this.marginBoxCount||e.width>=this.shortBoxCount-this.marginBoxCount||e.height>=this.longBoxCount-this.marginBoxCount:e.height<this.marginBoxCount||e.width<this.marginBoxCount||e.width>=this.longBoxCount-this.marginBoxCount||e.height>=this.shortBoxCount-this.marginBoxCount}drawNoise(e){let s=this.getNoiseVars(e);this.buffer.push(),this.buffer.noStroke(),this.buffer.rectMode(CORNERS);for(var t=0;t<this.boxes.length;t++){if(this.drawSkipMargin(this.boxes[t]))continue;let e=this.boxes[t][s.noiseValueName],i=Math.round(map(e,s.noiseValueMin,s.noiseValueMax,0,255));this.buffer.fill(i),this.buffer.rect(this.boxes[t].A.x,this.boxes[t].A.y,this.boxes[t].C.x,this.boxes[t].C.y)}this.buffer.pop()}drawBackdrop(){this.buffer.push(),this.buffer.noStroke(),this.buffer.fill(this.paletteBackgrounda),this.buffer.rect(0,0,this.buffer.width,this.buffer.height*this.horizonRatio),this.buffer.pop(),this.buffer.push(),this.buffer.noStroke(),this.buffer.fill(this.paletteBackgroundb),this.buffer.rect(0,this.buffer.height*this.horizonRatio,this.buffer.width,this.buffer.height*this.horizonRatio),this.buffer.pop()}drawZigZag(){let e=getRandomIndex(this.boxes.length),s=0;for(var t=0;t<e.length;t++)s=e[t],this.drawSkipMargin(this.boxes[s])||this.zigzag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:1,noiseValue:this.boxes[s].noiseValue2,vertexLength:map(this.boxes[s].noiseValue2,this.noise2.noiseValueMin,this.noise2.noiseValueMax,1,15),strokeWeighty:map(this.boxes[s].noiseValue2,this.noise2.noiseValueMin,this.noise2.noiseValueMax,.1,.3),angleMin:0,angleMax:PI,revert:!0,cutOutValue:.35,loopCount:map(this.boxes[s].noiseValue2,this.noise2.noiseValueMin,this.noise2.noiseValueMax,1,15),colorList:this.paletteZigZag,noiseAngle:!1,normIt:!0,buffer:this.bufferZigZag})}drawfullGround(){let e=getRandomIndex(this.boxes.length),s=0;for(var t=0;t<e.length;t++)s=e[t],this.drawSkipMargin(this.boxes[s])||(this.boxes[s].horizon?this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:3,noiseValue:this.boxes[s].noiseValue3,vertexLength:map(this.boxes[s].noiseValue1,this.noise1.noiseValueMin,this.noise1.noiseValueMax,10,50),strokeWeighty:1,angleMin:2*PI/12*8.5,angleMax:2*PI/12*9.5,revert:!0,cutOutValue:0,loopCount:map(this.boxes[s].noiseValue1,this.noise1.noiseValueMin,this.noise1.noiseValueMax,10,20),colorList:this.paletteHorizon1,noiseAngle:!1,normIt:!0,buffer:this.bufferFullGround}):this.boxes[s].aboveHorizon?this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:1,noiseValue:this.boxes[s].noiseValue1,vertexLength:map(this.boxes[s].noiseValue1,this.noise1.noiseValueMin,this.noise1.noiseValueMax,20,50),strokeWeighty:1,angleMin:2*PI/12*11.5,angleMax:2*PI/12*12.5,revert:!0,cutOutValue:0,loopCount:map(this.boxes[s].noiseValue1,this.noise1.noiseValueMin,this.noise1.noiseValueMax,10,20),colorList:this.paletteFullGrounda,noiseAngle:!1,normIt:!0,buffer:this.bufferFullGround}):this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:1,noiseValue:this.boxes[s].noiseValue1,vertexLength:map(this.boxes[s].noiseValue1,this.noise1.noiseValueMin,this.noise1.noiseValueMax,20,50),strokeWeighty:1,angleMin:2*PI/12*11.5,angleMax:2*PI/12*12.5,revert:!0,cutOutValue:0,loopCount:map(this.boxes[s].noiseValue1,this.noise1.noiseValueMin,this.noise1.noiseValueMax,10,20),colorList:this.paletteFullGroundb,noiseAngle:!1,normIt:!0,buffer:this.bufferFullGround}))}drawCutOutClouds(){let e=getRandomIndex(this.boxes.length),s=0;for(var t=0;t<e.length;t++)s=e[t],this.drawSkipMargin(this.boxes[s])||(this.boxes[s].aboveHorizon?this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:9,noiseValue:this.boxes[s].noiseValue9,noiseValueB:this.boxes[s].noiseValue10,vertexLength:map(this.boxes[s].noiseValue9,this.noise9.noiseValueMin,this.noise9.noiseValueMax,5,15),strokeWeighty:.4,angleMin:2*PI/12*5,angleMax:2*PI/12*7,revert:!0,cutOutValue:.5,loopCount:map(this.boxes[s].noiseValue9,this.noise9.noiseValueMin,this.noise9.noiseValueMax,10,20),colorList:this.paletteCutOutCloudsa,noiseAngle:!0,normIt:!0,buffer:this.bufferCutOutClouds}):this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:9,noiseNumberB:10,noiseValue:this.boxes[s].noiseValue9,vertexLength:map(this.boxes[s].noiseValue9,this.noise9.noiseValueMin,this.noise9.noiseValueMax,5,15),strokeWeighty:.4,angleMin:2*PI/12*5,angleMax:2*PI/12*7,revert:!0,cutOutValue:.5,loopCount:map(this.boxes[s].noiseValue9,this.noise9.noiseValueMin,this.noise9.noiseValueMax,10,20),colorList:this.paletteCutOutCloudsb,noiseAngle:!0,normIt:!0,buffer:this.bufferCutOutClouds}))}drawEverywhereSome1(){let e=getRandomIndex(this.boxes.length),s=0;for(var t=0;t<e.length;t++)s=e[t],this.drawSkipMargin(this.boxes[s])||(this.boxes[s].horizon?this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:3,noiseValue:this.boxes[s].noiseValue3,noiseValueB:this.boxes[s].noiseValue4,vertexLength:map(this.boxes[s].noiseValue3,this.noise3.noiseValueMin,this.noise3.noiseValueMax,10,20),strokeWeighty:.4,angleMin:2*PI/12*11,angleMax:2*PI/12*13,revert:!0,cutOutValue:0,loopCount:30,colorList:this.paletteHorizon1,noiseAngle:!1,normIt:!0,buffer:this.bufferEverywhereSome1}):this.boxes[s].aboveHorizon?this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:3,noiseValue:this.boxes[s].noiseValue3,noiseValueB:this.boxes[s].noiseValue4,vertexLength:map(this.boxes[s].noiseValue3,this.noise3.noiseValueMin,this.noise3.noiseValueMax,10,30),strokeWeighty:.4,angleMin:2*PI/12*4,angleMax:2*PI/12*6,revert:!0,cutOutValue:.65,loopCount:map(this.boxes[s].noiseValue3,this.noise3.noiseValueMin,this.noise3.noiseValueMax,3,20),colorList:this.paletteFullGrounda,noiseAngle:!0,normIt:!0,buffer:this.bufferEverywhereSome1}):this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:3,noiseValue:this.boxes[s].noiseValue3,noiseValueB:this.boxes[s].noiseValue4,vertexLength:map(this.boxes[s].noiseValue3,this.noise3.noiseValueMin,this.noise3.noiseValueMax,10,30),strokeWeighty:.4,angleMin:2*PI/12*4,angleMax:2*PI/12*6,revert:!0,cutOutValue:.65,loopCount:map(this.boxes[s].noiseValue4,this.noise4.noiseValueMin,this.noise4.noiseValueMax,3,20),colorList:this.paletteFullGroundb,noiseAngle:!0,normIt:!0,buffer:this.bufferEverywhereSome1}))}drawSection(){let e=getRandomIndex(this.boxes.length),s=0;for(var t=0;t<e.length;t++)s=e[t],this.drawSkipMargin(this.boxes[s])||(this.boxes[s].height>=this.horizonRow-20&&this.boxes[s].height<this.horizonRow&&this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:10,noiseValue:this.boxes[s].noiseValue10,noiseValueB:this.boxes[s].noiseValue9,vertexLength:map(this.boxes[s].noiseValue10,this.noise10.noiseValueMin,this.noise10.noiseValueMax,5,25),strokeWeighty:.4,angleMin:2*PI/12*.5,angleMax:2*PI/12*2.5,revert:!0,cutOutValue:.45,loopCount:map(this.boxes[s].noiseValue10,this.noise10.noiseValueMin,this.noise10.noiseValueMax,10,20),colorList:this.paletteSectiona1,noiseAngle:!1,normIt:!0,buffer:this.bufferSection}),this.boxes[s].height>=this.horizonRow-10&&this.boxes[s].height<this.horizonRow&&this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:10,noiseValue:this.boxes[s].noiseValue10,noiseValueB:this.boxes[s].noiseValue9,vertexLength:map(this.boxes[s].noiseValue10,this.noise10.noiseValueMin,this.noise10.noiseValueMax,5,25),strokeWeighty:.4,angleMin:2*PI/12*.5,angleMax:2*PI/12*2.5,revert:!0,cutOutValue:.45,loopCount:map(this.boxes[s].noiseValue10,this.noise10.noiseValueMin,this.noise10.noiseValueMax,10,30),colorList:this.paletteSectiona2,noiseAngle:!1,normIt:!0,buffer:this.bufferSection}),this.boxes[s].height>=this.horizonRow-5&&this.boxes[s].height<this.horizonRow&&this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:10,noiseValue:this.boxes[s].noiseValue10,noiseValueB:this.boxes[s].noiseValue9,vertexLength:map(this.boxes[s].noiseValue10,this.noise10.noiseValueMin,this.noise10.noiseValueMax,5,15),strokeWeighty:.4,angleMin:2*PI/12*.5,angleMax:2*PI/12*2.5,revert:!0,cutOutValue:.25,loopCount:map(this.boxes[s].noiseValue10,this.noise10.noiseValueMin,this.noise10.noiseValueMax,10,30),colorList:this.paletteSectiona3,noiseAngle:!1,normIt:!0,buffer:this.bufferSection}),this.boxes[s].height<=this.horizonRow+20&&this.boxes[s].height>this.horizonRow&&this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:10,noiseValue:this.boxes[s].noiseValue10,noiseValueB:this.boxes[s].noiseValue9,vertexLength:map(this.boxes[s].noiseValue10,this.noise10.noiseValueMin,this.noise10.noiseValueMax,5,15),strokeWeighty:.4,angleMin:2*PI/12*4.5,angleMax:2*PI/12*6.5,revert:!0,cutOutValue:.65,loopCount:map(this.boxes[s].noiseValue10,this.noise10.noiseValueMin,this.noise10.noiseValueMax,10,30),colorList:this.paletteSectionb1,noiseAngle:!1,normIt:!0,buffer:this.bufferSection}),this.boxes[s].height<=this.horizonRow+10&&this.boxes[s].height>this.horizonRow&&this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:10,noiseValue:this.boxes[s].noiseValue10,noiseValueB:this.boxes[s].noiseValue9,vertexLength:map(this.boxes[s].noiseValue10,this.noise10.noiseValueMin,this.noise10.noiseValueMax,5,25),strokeWeighty:.4,angleMin:2*PI/12*9.5,angleMax:2*PI/12*11.5,revert:!0,cutOutValue:.45,loopCount:map(this.boxes[s].noiseValue10,this.noise10.noiseValueMin,this.noise10.noiseValueMax,10,30),colorList:this.paletteSectionb2,noiseAngle:!1,normIt:!0,buffer:this.bufferSection}),this.boxes[s].height<=this.horizonRow+5&&this.boxes[s].height>this.horizonRow&&this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:10,noiseValue:this.boxes[s].noiseValue10,noiseValueB:this.boxes[s].noiseValue9,vertexLength:map(this.boxes[s].noiseValue10,this.noise10.noiseValueMin,this.noise10.noiseValueMax,5,15),strokeWeighty:.4,angleMin:2*PI/12*6.5,angleMax:2*PI/12*8.5,revert:!0,cutOutValue:.25,loopCount:map(this.boxes[s].noiseValue10,this.noise10.noiseValueMin,this.noise10.noiseValueMax,10,30),colorList:this.paletteSectionb3,noiseAngle:!1,normIt:!0,buffer:this.bufferSection}))}drawCutOutClouds2(){let e=getRandomIndex(this.boxes.length),s=0;for(var t=0;t<e.length;t++)s=e[t],this.drawSkipMargin(this.boxes[s])||(this.boxes[s].horizon?this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:3,noiseValue:this.boxes[s].noiseValue3,vertexLength:map(this.boxes[s].noiseValue3,this.noise3.noiseValueMin,this.noise3.noiseValueMax,5,15),strokeWeighty:1,angleMin:2*PI/12*11.5,angleMax:2*PI/12*.5,revert:!0,cutOutValue:0,loopCount:10,colorList:this.paletteHorizon1,noiseAngle:!1,normIt:!0,buffer:this.bufferCutOutClouds2}):this.boxes[s].aboveHorizon?this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:5,noiseValue:this.boxes[s].noiseValue5,vertexLength:map(this.boxes[s].noiseValue5,this.noise5.noiseValueMin,this.noise5.noiseValueMax,1,3),strokeWeighty:.4,angleMin:2*PI/12*0,angleMax:2*PI/12*12,revert:!0,cutOutValue:.8,loopCount:map(this.boxes[s].noiseValue5,this.noise5.noiseValueMin,this.noise5.noiseValueMax,1,150),colorList:this.paletteCutOutClouds2a,noiseAngle:!1,normIt:!0,buffer:this.bufferCutOutClouds2}):this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:5,noiseValue:this.boxes[s].noiseValue6,vertexLength:map(this.boxes[s].noiseValue6,this.noise6.noiseValueMin,this.noise6.noiseValueMax,1,3),strokeWeighty:.4,angleMin:2*PI/12*0,angleMax:2*PI/12*12,revert:!0,cutOutValue:.5,loopCount:map(this.boxes[s].noiseValue6,this.noise6.noiseValueMin,this.noise6.noiseValueMax,1,150),colorList:this.paletteCutOutClouds2b,noiseAngle:!1,normIt:!0,buffer:this.bufferCutOutClouds2}))}drawCutOutClouds3(){let e=getRandomIndex(this.boxes.length),s=0;for(var t=0;t<e.length;t++)s=e[t],this.drawSkipMargin(this.boxes[s])||(this.boxes[s].aboveHorizon?this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:7,noiseValue:this.boxes[s].noiseValue7,noiseValueB:this.boxes[s].noiseValue8,vertexLength:map(this.boxes[s].noiseValue7,this.noise7.noiseValueMin,this.noise7.noiseValueMax,1,25),strokeWeighty:.4,angleMin:2*PI/12*5,angleMax:2*PI/12*6,revert:!0,cutOutValue:.5,loopCount:map(this.boxes[s].noiseValue7,this.noise7.noiseValueMin,this.noise7.noiseValueMax,1,25),colorList:this.paletteCutOutClouds3a,noiseAngle:!0,normIt:!0,buffer:this.bufferCutOutClouds3}):this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:7,noiseNumberB:8,noiseValue:this.boxes[s].noiseValue7,vertexLength:map(this.boxes[s].noiseValue7,this.noise7.noiseValueMin,this.noise7.noiseValueMax,1,25),strokeWeighty:.4,angleMin:2*PI/12*5,angleMax:2*PI/12*6,revert:!0,cutOutValue:.5,loopCount:map(this.boxes[s].noiseValue7,this.noise7.noiseValueMin,this.noise7.noiseValueMax,1,25),colorList:this.paletteCutOutClouds3b,noiseAngle:!0,normIt:!0,buffer:this.bufferCutOutClouds3}))}drawCutOutCloudsV(){let e=getRandomIndex(this.boxes.length),s=0;for(var t=0;t<e.length;t++)s=e[t],this.drawSkipMargin(this.boxes[s])||(this.boxes[s].aboveHorizon?this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:11,noiseValue:this.boxes[s].noiseValue11,vertexLength:map(this.boxes[s].noiseValue11,this.noise11.noiseValueMin,this.noise11.noiseValueMax,1,3),strokeWeighty:.4,angleMin:2*PI/12*0,angleMax:2*PI/12*12,revert:!0,cutOutValue:.6,loopCount:map(this.boxes[s].noiseValue11,this.noise11.noiseValueMin,this.noise11.noiseValueMax,1,120),colorList:this.palettedrawCutOutCloudsVa,noiseAngle:!1,normIt:!0,buffer:this.bufferCutOutCloudsV}):this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:11,noiseNumberB:12,noiseValue:this.boxes[s].noiseValue12,vertexLength:map(this.boxes[s].noiseValue12,this.noise11.noiseValueMin,this.noise11.noiseValueMax,1,3),strokeWeighty:.4,angleMin:2*PI/12*0,angleMax:2*PI/12*12,revert:!0,cutOutValue:.6,loopCount:map(this.boxes[s].noiseValue12,this.noise11.noiseValueMin,this.noise11.noiseValueMax,1,120),colorList:this.palettedrawCutOutCloudsVb,noiseAngle:!1,normIt:!0,buffer:this.bufferCutOutCloudsV}),this.boxes[s].aboveHorizon?this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:11,noiseNumberB:12,noiseValue:this.boxes[s].noiseValue11,vertexLength:map(this.boxes[s].noiseValue11,this.noise11.noiseValueMin,this.noise11.noiseValueMax,5,15),strokeWeighty:.4,angleMin:2*PI/12*1,angleMax:2*PI/12*3,revert:!0,cutOutValue:.7,loopCount:map(this.boxes[s].noiseValue11,this.noise11.noiseValueMin,this.noise11.noiseValueMax,10,20),colorList:this.palettedrawCutOutCloudsVa,noiseAngle:!1,normIt:!0,buffer:this.bufferCutOutCloudsV}):this.digndag2({centerX:this.boxes[s].A.x+this.boxes[s].offset.x,centerY:this.boxes[s].A.y+this.boxes[s].offset.y,noiseNumber:11,noiseNumberB:12,noiseValue:this.boxes[s].noiseValue12,vertexLength:map(this.boxes[s].noiseValue12,this.noise12.noiseValueMin,this.noise12.noiseValueMax,5,15),strokeWeighty:.4,angleMin:2*PI/12*1,angleMax:2*PI/12*3,revert:!0,cutOutValue:.7,loopCount:map(this.boxes[s].noiseValue12,this.noise12.noiseValueMin,this.noise12.noiseValueMax,10,20),colorList:this.palettedrawCutOutCloudsVb,noiseAngle:!1,normIt:!0,buffer:this.bufferCutOutCloudsV}))}digndag2(e){let s=createVector(e.centerX,e.centerY),t=e.vertexLength,i=e.strokeWeighty,o=e.angleMin,n=e.angleMax,h=e.loopCount,a=e.normIt,u=e.buffer,r=0,l=0,f=0,x=[],b={};if(b=this.getNoiseVars(e.noiseNumber),r=e.noiseValue,x=e.colorList,l=a?map(r,b.noiseValueMin,b.noiseValueMax,0,1):r,l>e.cutOutValue){let a=constrain(Math.round(map(r,b.noiseValueMin,b.noiseValueMax,0,x.length-1)),0,x.length-1);u.push(),u.noFill(),u.strokeWeight(i),u.strokeCap(SQUARE),u.beginShape();let V=s,d=V,p=x[a];u.vertex(V.x,V.y);for(var g=0;g<h;g++){V=d,f=e.noiseAngle?map(l,0,1,0,2*PI)+getRandomFromInterval(-.5,.5):getRandomFromInterval(o,n),e.revert&&g%2!=0&&(f-=PI);let s=p5.Vector.fromAngle(f,t*getRandomFromInterval(.9,1.1));d=p5.Vector.add(V,s),p=distortColorSuperNew(x[a],10),u.stroke(p),u.vertex(d.x,d.y)}u.endShape(),u.pop()}}zigzag2(e){let s=createVector(e.centerX,e.centerY),t=e.vertexLength,i=e.strokeWeighty,o=e.angleMin,n=e.angleMax,h=e.loopCount,a=e.normIt,u=e.buffer,r=0,l=0,f=0,x=[],b={};if(b=this.getNoiseVars(e.noiseNumber),r=e.noiseValue,x=e.colorList,l=a?map(r,b.noiseValueMin,b.noiseValueMax,0,1):r,l>e.cutOutValue){let e=constrain(Math.round(map(r,b.noiseValueMin,b.noiseValueMax,0,x.length-1)),0,x.length-1);u.push(),u.noFill(),u.strokeWeight(i),u.strokeCap(SQUARE),u.beginShape();let a=x[e];for(var g=0;g<h;g++){f=getRandomFromInterval(o,n);let i=p5.Vector.fromAngle(f,t*getRandomFromInterval(.9,1.1));a=distortColorSuperNew(x[e],10),u.stroke(a);let h=p5.Vector.add(s,i);this.buffer.vertex(h.x,h.y)}u.endShape(),u.pop()}}drawShape(){if(fxrand()>0){let s=50,t=150,i=10;for(var e=0;e<i;e++){let e=createVector(getRandomFromInterval(0,this.buffer.width),getRandomFromInterval(0,this.buffer.height)),i=this.shapeColor;this.buffer.push(),this.buffer.fill(i),this.buffer.noStroke(),this.buffer.beginShape(),this.buffer.vertex(e.x-getRandomFromInterval(s,t),e.y-getRandomFromInterval(s,t)),this.buffer.vertex(e.x+getRandomFromInterval(s,t),e.y-getRandomFromInterval(s,t)),this.buffer.vertex(e.x+getRandomFromInterval(s,t),e.y+getRandomFromInterval(s,t)),this.buffer.vertex(e.x-getRandomFromInterval(s,t),e.y+getRandomFromInterval(s,t)),this.buffer.endShape(CLOSE),this.buffer.pop()}}}draw(){this.drawfullGround(),this.drawCutOutCloudsV(),this.drawEverywhereSome1(),this.drawSection(),this.drawZigZag(),this.drawCutOutClouds(),this.drawCutOutClouds2(),this.drawCutOutClouds3()}show(){push(),image(this.buffer,0,0),frameCount>=this.STARTFRAME+10&&image(this.bufferFullGround,0,0),frameCount>=this.STARTFRAME+11&&image(this.bufferCutOutClouds,0,0),frameCount>=this.STARTFRAME+12&&image(this.bufferCutOutCloudsV,0,0),frameCount>=this.STARTFRAME+13&&image(this.bufferCutOutClouds3,0,0),frameCount>=this.STARTFRAME+14&&image(this.bufferCutOutClouds2,0,0),frameCount>=this.STARTFRAME+15&&image(this.bufferSection,0,0),frameCount>=this.STARTFRAME+16&&image(this.bufferEverywhereSome1,0,0),frameCount>=this.STARTFRAME+17&&image(this.bufferZigZag,0,0),frameCount>=this.STARTFRAME+18&&(this.finished=!0),pop()}getNoiseVars(e){let s="",t=0,i=0;return 1==e?(s="noiseValue1",t=this.noise1.noiseValueMin,i=this.noise1.noiseValueMax):2==e?(s="noiseValue2",t=this.noise2.noiseValueMin,i=this.noise2.noiseValueMax):3==e?(s="noiseValue3",t=this.noise3.noiseValueMin,i=this.noise3.noiseValueMax):4==e?(s="noiseValue4",t=this.noise4.noiseValueMin,i=this.noise4.noiseValueMax):5==e?(s="noiseValue5",t=this.noise5.noiseValueMin,i=this.noise5.noiseValueMax):6==e?(s="noiseValue6",t=this.noise6.noiseValueMin,i=this.noise6.noiseValueMax):7==e?(s="noiseValue7",t=this.noise7.noiseValueMin,i=this.noise7.noiseValueMax):8==e?(s="noiseValue8",t=this.noise8.noiseValueMin,i=this.noise8.noiseValueMax):9==e?(s="noiseValue9",t=this.noise9.noiseValueMin,i=this.noise9.noiseValueMax):10==e?(s="noiseValue10",t=this.noise10.noiseValueMin,i=this.noise10.noiseValueMax):11==e?(s="noiseValue11",t=this.noise11.noiseValueMin,i=this.noise11.noiseValueMax):(s="noiseValue12",t=this.noise12.noiseValueMin,i=this.noise12.noiseValueMax),{noiseValueName:s,noiseValueMin:t,noiseValueMax:i}}}